import{_ as u}from"./CKjchmfx.js";import{_ as d}from"./EmcYxZ4t.js";import{r as _}from"./BwgVrkoo.js";import{d as f,b as g,s as y,a as $,Z as h,ap as T,e as b,c as k,f as n,h as a,g as v,ak as x,o as A}from"./CMcu4vOi.js";import"./BQ_uKm6x.js";import"./BwHuf7fG.js";import"./B5y2QTf5.js";import"./weTs8tLg.js";import"./CziPTEgh.js";import"./Cy5WKwqU.js";import"./VKdB9Mfh.js";import"./DDd3r5-x.js";import"./Brx9_43Z.js";import"./sfWYJY5J.js";const F=f({__name:"media",async setup(B){let t,o;const{t:r}=g(),c=y().params,i=$(()=>c.account),e=([t,o]=h(()=>x(i.value)),t=await t,o(),t),m=T().v1.accounts.$select(e.id).statuses.list({onlyMedia:!0,excludeReplies:!1});return e&&b({title:()=>`${r("tab.media")} | ${v(e)} (@${e.acct})`}),(s,C)=>{const p=u,l=d;return A(),k("div",null,[n(p),n(l,{paginator:a(m),preprocess:"reorderedTimeline"in s?s.reorderedTimeline:a(_),context:"account",account:a(e)},null,8,["paginator","preprocess","account"])])}}});export{F as default};
