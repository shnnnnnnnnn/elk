import{ba as p,q as c,A as w,D as y,b_ as b,a as g,x as k,cB as x}from"./CMcu4vOi.js";const i=p({});function B(){const t=c.value?.account.id,{client:s,streamingClient:r}=w();async function f(){if(!t||!i[t])return;const n=i[t][1][0];i[t][1]=[],n&&await s.value.v1.markers.create({notifications:{lastReadId:n}})}async function l(n,o){for await(const e of n)e.event==="notification"&&i[o]&&i[o][1].unshift(e.payload.id)}async function d(){if(!k.value||!t||i[t]!==void 0||!c.value?.token)return;let n;const o=new Promise(a=>n=a);i[t]=[o,[]],await x(r).toBeTruthy();const e=r.value.user.subscribe();n(e),l(e,t);const m=await s.value.v1.markers.fetch({timeline:["notifications"]}),h=s.value.v1.notifications.list({limit:30});do{const a=await h.next();if(!a.done&&a.value.length)for(const u of a.value){if(u.id===m.notifications.lastReadId)return;i[t][1].push(u.id)}else break}while(!0)}function v(){!t||!i[t]||(i[t][0].then(n=>n.unsubscribe()),i[t]=void 0)}return y(c,v),b(()=>{d()}),{notifications:g(()=>t?i[t]?.[1].length??0:0),clearNotifications:f}}export{B as u};
