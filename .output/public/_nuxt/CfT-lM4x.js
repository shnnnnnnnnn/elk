import{_}from"./CKjchmfx.js";import{_ as d}from"./EmcYxZ4t.js";import{d as f,s as g,a as x,b as $,Z as h,ap as y,e as A,c as k,f as n,h as s,g as v,ak as B,o as C}from"./CMcu4vOi.js";import{r as H}from"./BwgVrkoo.js";import"./BQ_uKm6x.js";import"./BwHuf7fG.js";import"./B5y2QTf5.js";import"./weTs8tLg.js";import"./CziPTEgh.js";import"./Cy5WKwqU.js";import"./VKdB9Mfh.js";import"./DDd3r5-x.js";import"./Brx9_43Z.js";import"./sfWYJY5J.js";const G=f({__name:"index",async setup(T){let e,o;const c=g().params,r=x(()=>c.account),{t:i}=$(),t=([e,o]=h(()=>B(r.value)),e=await e,o(),e);function p(a){return H(a,"account")}const m=y().v1.accounts.$select(t.id).statuses.list({limit:30,excludeReplies:!0});return t&&A({title:()=>`${i("account.posts")} | ${v(t)} (@${t.acct})`}),(a,b)=>{const u=_,l=d;return C(),k("div",null,[n(u),n(l,{paginator:s(m),preprocess:p,context:"account",account:s(t)},null,8,["paginator","account"])])}}});export{G as default};
